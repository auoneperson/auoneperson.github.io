# This is a basic workflow to help you get started with Actions

name: Hexo Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    name: Deploy blog
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true  # Checkout private submodules(themes or something else). 当有子模块时切换分支？
      # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.) 缓存压缩 node_modules，不用每次下载，使用时解压，可以加快工作流的执行过程，超过 7 天没有使用将删除压缩包。
      - name: Cache node modules # step2
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies # step3 
        if: steps.cache.outputs.cache-hit != 'true' # 如果变量 cache-hit 不等于 true
        run: npm install # 安装 node modules 相关依赖

      # Deploy hexo blog website.
      - name: Deploy # step4
        id: deploy
        uses: sma11black/hexo-action@v1.0.3
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}
          user_name: auoneperson
          user_email: auoneperson@126.com
          commit_msg: ${{github.event.head_commit.message}} 
      # Use the output from the `deploy` step(use for test action) 
      - name: Get the output
        run: |
          echo "${{ steps.deploy.outputs.notify }}"

